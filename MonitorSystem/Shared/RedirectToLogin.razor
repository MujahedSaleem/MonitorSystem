@inject NavigationManager Navigation
@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    [Parameter]
    public string ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;

        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            if (!string.IsNullOrEmpty(ReturnUrl))
                ReturnUrl = "?returnUrl~/" + ReturnUrl;
            Navigation.NavigateTo($"Identity/Account/Login{ReturnUrl}", forceLoad: true);
        }
    }
}